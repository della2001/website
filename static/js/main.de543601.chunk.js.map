{"version":3,"sources":["Resume.pdf","Picture.JPG","logo.svg","Main.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Main","class","id","src","Picture","alt","href","target","icon","faLinkedin","size","faGithub","Resume","faFileAlt","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yFAAAA,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,gFCA3CD,EAAOC,QAAU,IAA0B,kC,qOC0E5BC,E,uKA1DP,OACI,yBAAKC,MAAM,QACP,yBAAKC,GAAG,MAAMC,IAAKC,IAASC,IAAI,kBAChC,2DACA,qGAA0E,uBAAGC,KAAK,GAAGC,OAAO,UAAS,0BAAML,GAAG,QAAT,oBAArG,KACA,yHACA,0GACA,iDAAsB,uBAAGI,KAAK,gCAA+B,0BAAMJ,GAAG,UAAT,0BAA7D,KACA,uBAAGI,KAAK,2CAA2CC,OAAO,UAAS,kBAAC,IAAD,CAAiBC,KAAMC,IAAYC,KAAK,OAA3G,wBACA,uBAAGJ,KAAK,+BAA+BC,OAAO,UAAS,kBAAC,IAAD,CAAiBC,KAAMG,IAAUD,KAAK,OAA7F,wBACA,uBAAGJ,KAAMM,IAAQL,OAAO,UAAS,kBAAC,IAAD,CAAiBC,KAAMK,IAAWH,KAAK,QAKxE,6BAAS,6BAAS,6BAAS,6BAC3B,6CACA,4BACI,kFAAuD,uBAAGJ,KAAK,2BAA2BC,OAAO,UAAS,0BAAML,GAAG,SAAT,iBAC1G,sFAA2D,uBAAGI,KAAK,iCAAiCC,OAAO,UAAU,0BAAML,GAAG,UAAT,qBACrH,uHACA,4CAAiB,uBAAGI,KAAK,8BAA8BC,OAAO,UAAS,0BAAML,GAAG,QAAT,mBAAvE,iDACA,4BAAI,uBAAGI,KAAK,gFAAgFC,OAAO,UAAS,0BAAML,GAAG,OAAT,cAA5G,+DAEJ,6BAAS,6BACT,kDACA,4BACI,gEAAqC,uBAAGI,KAAK,0BAA0BC,OAAO,UAAS,0BAAML,GAAG,UAAT,eACvF,mGACA,+EAAoD,uBAAGI,KAAK,6BAA6BC,OAAO,UAAS,0BAAML,GAAG,QAAT,6BAE7G,6BAAS,6BACT,0DACA,mDACA,iHAC6F,6BAD7F,yEAIA,uBAAGI,KAAK,mCAAmCC,OAAO,UAAS,uDAC3D,uHAGA,qDACA,kIAGA,qDACA,iHAC6F,6BAD7F,iFAIA,6BAAS,6BACT,8F,GAtDGO,aCREA,YCUNC,MATf,WACE,OACE,6BACE,kBAAC,EAAD,QCEcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.de543601.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Resume.c68908c6.pdf\";","module.exports = __webpack_public_path__ + \"static/media/Picture.59326b1f.JPG\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom'\nimport { render } from '@testing-library/react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLinkedin } from '@fortawesome/free-brands-svg-icons'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\nimport { faFileAlt } from '@fortawesome/free-solid-svg-icons'\n\nimport Resume from './Resume.pdf'\nimport Picture from './Picture.JPG'\nimport './main.css';\n\n\n\nclass Main extends Component {\n    render() {\n        return (\n            <div class=\"text\">\n                <img id=\"pic\" src={Picture} alt=\"Smiley Della!\" />\n                <h1>Hi! I'm Della. ðŸ‘‹</h1>\n                <p>I'm a developer and a student studying Computer Science + Economics at <a href=\"\" target=\"_blank\"><span id=\"blue\">Duke University</span></a>.</p>\n                <p>I'm interested in building impactful technology within finance, e-commerce, and education.</p>\n                <p>Currently seeking a Software Engineering Internship in Jakarta, Indonesia. </p>\n                <p>Reach out to me at <a href=\"mailto:della.sihite@duke.edu\"><span id=\"purple\">della.sihite@duke.edu</span></a>!</p>\n                <a href=\"https://www.linkedin.com/in/dellasihite/\" target=\"_blank\"><FontAwesomeIcon icon={faLinkedin} size=\"2x\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</a>\n                <a href=\"https://github.com/della2001\" target=\"_blank\"><FontAwesomeIcon icon={faGithub} size=\"2x\"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</a>\n                <a href={Resume} target=\"_blank\"><FontAwesomeIcon icon={faFileAlt} size=\"2x\"/></a>\n\n\n\n\n                <br></br><br></br><br></br><br></br>\n                <h2>// currently:</h2>\n                <ul>\n                    <li>Analyzing healthcare data with machine learning at <a href=\"https://mydrugcosts.com/\" target=\"_blank\"><span id=\"green\">myDrugCosts</span></a></li>\n                    <li>Business development, marketing, and product design at <a href=\"https://www.capriforgirls.com/\" target=\"_blank\" ><span id=\"yellow\">Capri for Girls</span></a></li>\n                    <li>Creating a website for an optimization algorithm to help businesses reopen during COVID</li>\n                    <li>Tech Lead at <a href=\"https://storeopenspace.com/\" target=\"_blank\"><span id=\"blue\">OpenSpace Inc.</span></a>, a student-founded storage platform startup </li>\n                    <li><a href=\"https://studentaffairs.duke.edu/ihouse/intl-undergraduate-students/your-ihops\" target=\"_blank\"><span id=\"red\">Mentoring</span></a> and (virtually) welcoming international freshmen to Duke!</li>\n                </ul>\n                <br></br><br></br>\n                <h2>// what I've done:</h2>\n                <ul>\n                    <li>pro-bono strategy consulting for <a href=\"https://smartsentry.ai/\" target=\"_blank\"><span id=\"yellow\">Sentry AI</span></a></li>\n                    <li>tech support for Duke students and faculty at the Link Service Desk</li>\n                    <li>computer science + astrophysics research at the <a href=\"https://summerscience.org/\" target=\"_blank\"><span id=\"blue\">Summer Science Program</span></a></li>\n                </ul>\n                <br></br><br></br>\n                <h2>// ongoing + past projects</h2>\n                <h3>WakeCareZ (ongoing)</h3>\n                <p>\n                    &nbsp;&nbsp;&nbsp;Gen Z initiative furthering community and education in Wake County, NC.<br></br>\n                    &nbsp;&nbsp;&nbsp;Built website in React, using Airtable API as a database.\n                </p>\n                <a href=\"https://howcanihelp.netlify.app/\" target=\"_blank\"><h3>Tech Volunteer Website</h3></a>\n                <p>\n                    &nbsp;&nbsp;&nbsp;Connecting 50+ nonprofit organizations and initiatives with tech volunteers.\n                </p>\n                <h3>Percolation Algorithm</h3>\n                <p>\n                    &nbsp;&nbsp;&nbsp;Algorithm in Java estimating value of percolation threshold via Monte Carlo Simulation.\n                </p>\n                <h3>Orbital Determination</h3>\n                <p>\n                    &nbsp;&nbsp;&nbsp;Python program to calculate the orbital elements of asteroid 1627 Ivar.<br></br>\n                    &nbsp;&nbsp;&nbsp;Published results in the Harvard-Smithsonian Minor Planet Center.\n                </p>\n                <br></br><br></br>\n                <h2>ðŸš§ full website under construction ðŸš§</h2>\n            </div>\n            );\n    }\n}\n\nexport default Main;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom'\nimport { render } from '@testing-library/react';\n\nimport './main.css';\n\nclass Header extends Component {\n    render() {\n        return (\n            <div class=\"head\">\n                <p>ABOUT</p>\n                <p>RESUME</p>\n                <p>EXPERIENCE</p>\n                <p>PROJECTS</p>\n                <p>CONTACT</p>\n            </div>\n\n        )\n    }\n}\n\nexport default Header","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './main.css'\nimport Main from './Main'\nimport Header from './Header'\n\nfunction App() {\n  return (\n    <div>\n      <Main/>\n    </div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}